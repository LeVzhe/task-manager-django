# Generated by Django 5.0.7 on 2024-08-06 19:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(blank=True, max_length=256, null=True, verbose_name='Содержание')),
                ('piority_status', models.SmallIntegerField(choices=[(0, 'Низкий'), (1, 'Средний'), (2, 'Высокий'), (3, 'Критический')], default=0)),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
            },
        ),
        migrations.CreateModel(
            name='WorkField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('created_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
            ],
            options={
                'verbose_name': 'Поле',
                'verbose_name_plural': 'Поля',
            },
        ),
        migrations.CreateModel(
            name='WorkFieldTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tasks_app.task', verbose_name='Задача')),
                ('work_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tasks_app.workfield', verbose_name='Поле')),
            ],
        ),
        migrations.AddField(
            model_name='workfield',
            name='tasks',
            field=models.ManyToManyField(through='tasks_app.WorkFieldTask', to='tasks_app.task', verbose_name='Задачи'),
        ),
    ]
